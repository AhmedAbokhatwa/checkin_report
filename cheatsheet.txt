- bench --site sitename enable-scheduler
- sudo bench set-config developer_mode true

*************************************************Github****************************************************
eval "$(ssh-agent -s)"  # Start the SSH agent if it's not already running
ssh-add ~/.ssh/id_rsa   # Add your private key
ssh-add -l

1.how to create new branch ??
1. git checkout -b new-branch-name
2.git add .
3.git commit -m "Your commit message describing the changes"
4.git push origin new-branch-name


2.commit?
-git commit -m "first commit"


3.ALL current branch ?
-git branch
	result : branch is selectd <developer>
	*developer
	 ahmed
	 test	
	 
3.1 Switch to locally branch ?
- git checkout <ahmed>	

 
4.Delete branch ?
-git branch -d ahmed
Or 
-git push origin --delete ahmed

if ypu need to know your current Remote branch that you can push to it (remote branch)?
git branch -r
result : origin/developer


git branch -m < branch-name >
Since your local main branch is not currently tracking the remote origin/main branch, you can set it up to track that branch:?
-git branch --set-upstream-to=origin/main main


Resolving Divergent Branches?
-git pull --no-rebase
-git config pull.rebase false



Before making changes, create a new branch:?
git checkout -b my-feature-branch

Make Changes and Commit:?
git add .
git commit -m "Add my feature"
git push origin my-feature-branch



Create a Pull Request:?
Go to your forked repository on GitHub.
You should see an option to create a pull request. Click on it and 
follow the prompts to submit your changes to your friend's repository.

Sync with the Original Repository (when necessary):?
git checkout main


git fetch upstream
git merge upstream/main



----------------------------
problem fetal authontication
----------------------------
check if your SSH key is added to the SSH agent
1. ssh-add -l
4096 SHA256:MPYaxmytpyRYZd5Vf+cc9r/FLSVYA7vHtdcsRmTWvaA ahmedreda199785@gmail.com (RSA)

Enter passphrase for /home/frappe/.ssh/id_rsa: 199792285
Identity added: /home/frappe/.ssh/id_rsa (ahmedreda199785@gmail.com)



1. Check for SSH Key
-ls -al ~/.ssh
2. Generate an SSH Key (if needed)
-ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
3. Add SSH Key to the SSH Agent
-eval "$(ssh-agent -s)"
4.Then add your SSH key:
-ssh-add ~/.ssh/id_rsa
5.Copy your SSH public key to the clipboard:
-cat ~/.ssh/id_rsa.pub
6.Go to your GitHub account Then Navigate to Settings > SSH and GPG keys Click New SSH key Paste your key
7. Test the SSH Connection???
-ssh -T git@github.com
8.Try t clone Or Push
-git clone git@github.com:AhmedAbokhatwa/cheatsheet.git

- if Still fatal: Authentication failed for 'https//github.com/your_name/file.git/'
Switching to SSH for Git Operations
1.Change the Remote URL to SSH:
-git remote set-url origin git@github.com:your_name/file.git
2.git push <origin> <name>
----------------------------------------------------------------
lost my data in file when i delete <branch>make push on git repo
----------------------------------------------------------------
1.Check the reflog and Find the commit hash::
-git reflog
2.Recover the branch:
-git checkout -b recovered-ahmed <commit-hash>
3. you can either merge it back into your developer branch??
-git checkout developer
-git merge recovered-ahmed

------------------------------
get app if it in anther branch
------------------------------
bench get-app checkin_report https:/
/github.com/AhmedAbokhatwa/checkin_report.git --branch develop
*************************************************************

****************************************************************Linux Command**********************************************************************
1.find file?
-find ~ -name "text.txt"
  
2. find Command?
-history | grep "part_of_command"
history | grep "redis"
result : 1908  redis-server ~/frappe-bench/config/redis_cache.conf
 		 1918  sudo netstat -tuln | grep redis
  
/////////////////////
<production Setup>?
////////////////////
******************************************
-sudo apt-get -y install supervisor nginx
-sudo apt-get install supervisor
-sudo systemctl start supervisor
-sudo systemctl status supervisor
-bench setup socketio
-bench setup supervisor
-bench setup redis
-sudo supervisorctl reload
-	 [BENCH USER]
*****************************************


/////////////////////////////
500 Internal Server Error
////////////////////////////
*****************************************
sudo systemctl reload nginx


*****************************************
///////////////////////////
if you have bench 15 run on production
you can run developement server 
//////////////////////////
1. sudo  supervisorctl stop all
2. sudo supervisorctl stop nginx
///////////////////////////
ERROR fail2ban
//////////////////////////
1. sudo apt-get install fail2ban
2. sudo systemctl start fail2ban
3. sudo systemctl enable fail2ban
4. sudo systemctl status fail2ban
5. bench setup role fail2ban
6. sudo bench setup production [BENCH USER]
************************************************************frappe code *******************************************
-listview.page.add_menu_item(__(""),function(){})
-frappe.listview_settings["Device Log"] = { refresh: function (listview) {}}

-------------------
Insert Into 
	`tabEmployee Checkin`
	 (name, employee, time, log_type, device_log, device,creation,modified,owner)
	 (select name , employee , time , type, name, device,creation,modified,owner 
		from 
			`tabDevice Log`
		where 
			employee is not null
		and
	  		name not in 
			(select 
				device_log from 
			`tabEmployee Checkin`
	   		where 
	   		device_log is not null));
	"""
------------------	
	

------------------
sync_employee():
	Update 
		`tabDevice Log` log
	set log.employee = (
		select name 
		from 
		tabEmployee 
		where attendance_device_id = log.enroll_no limit 1		
	)

-----------------

----------------
in python
today 
today_date = getdate(today())

last month
last_month = add_months(row["renewal_date"], -1)


----------------

-----------------
convert date to srtin
dateString =  formatdate(get_datetime_str(self.end_of_life), "yyyy-MM-dd")
-----------------
append in childtable

customer_doc.append('customer_validation',
{
	'field': item['field'],
	'reason': item['reason']
})


----------------